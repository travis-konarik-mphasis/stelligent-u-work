AWSTemplateFormatVersion: '2010-09-09'
Resources:
  WebServerAsg:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AutoScalingGroupName: 'AutomationBoxes'
      VPCZoneIdentifier:
        - !ImportValue VpcPublicSubnet1Id
        - !ImportValue VpcPublicSubnet2Id
      DesiredCapacity: '3'
      HealthCheckType: 'ELB'
      HealthCheckGracePeriod: 30
      LaunchConfigurationName: !Ref WebServersLC
      MaxSize: '3'
      MinSize: '3'
      TargetGroupARNs:
        - !Ref 711ElbTargetGroup

  WebServersLC:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: 'ami-0a8b4cd432b1c3063'
      InstanceType: 't2.micro'
      LaunchConfigurationName: 'SimpleWebServerLC'
      SecurityGroups:
        - !ImportValue VpcAlbSecurityGroupId
        - !ImportValue VpcSshSecurityGroupId
      KeyName: tk-key
      AssociatePublicIpAddress: true
      UserData:
        Fn::Base64:
          Fn::Sub: |
            #!/bin/bash -xe

            yum install -y aws-cfn-bootstrap

            amazon-linux-extras install nginx1.12 -y
            systemctl enable nginx
            systemctl start nginx
            
            # Install the files and packages from the metadata
            /opt/aws/bin/cfn-init -v \
              --stack ${AWS::StackName} \
              --resource WebServersLC \
              --configsets All \
              --region ${AWS::Region}

            # Signal the status from cfn-init
            /opt/aws/bin/cfn-signal -e $? \
              --stack ${AWS::StackName} \
              --resource WebServersLC \
              --region ${AWS::Region}

    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          All:
            - ConfigureStelligentProject
        ConfigureStelligentProject:
          files:
            /usr/share/nginx/html/index.html:
              content: '<p>Automation for the People</p>'
              mode: '000644'
              owner: root
              group: root
  711ElbTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /index.html
      VpcId: !ImportValue VpcId
      TargetType: instance
      Port: 80
      Protocol: HTTP
  711Elb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - !ImportValue VpcPublicSubnet1Id
        - !ImportValue VpcPublicSubnet2Id
      SecurityGroups:
        - !ImportValue VpcAlbSecurityGroupId
  711ElbListner:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref 711ElbTargetGroup
          Type: forward
      LoadBalancerArn: !Ref 711Elb
      Port: 80
      Protocol: HTTP
